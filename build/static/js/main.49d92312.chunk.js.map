{"version":3,"sources":["Component/Footer.js","Component/DateTime.js","Component/Back.js","Component/Name.js","Component/Layout.js","Page/TimestampTransform.js","Page/GeneratorRandomPassword.js","Component/Item.js","Page/Home.js","Page/Fm.js","Component/BackFm.js","Component/FmLayout.js","Page/Channel.js","App.js","index.js"],"names":["DateTime","Component","props","style","paddingBottom","background","className","marginBottom","Date","getFullYear","href","target","rel","nowDateTime","state","getDateTime","this","clock","setInterval","tick","clearInterval","setState","dateTime","month","getMonth","zFill","getDate","getHours","getMinutes","getSeconds","argc","s","substr","length","React","Back","to","as","size","Name","document","title","padding","subtitle","PureComponent","Layout","children","Footer","TimestampTransform","switchTimeState","isRunning","switchName","transform","timeStamp","stringToInt","isNaN","intToString","clean","dateTimeChange","e","value","timeStampChange","getNowDateTme","nowTimeStamp","getNowTimestamp","running","getTime","Group","color","fullwidth","rounded","onClick","onChange","rows","placeholder","marginTop","GeneratorRandomPassword","charConfig","defaultPasswordLength","defaultPasswordCount","getPasswordSuccess","store","addNotification","message","type","insert","container","animationIn","animationOut","dismiss","duration","onScreen","passwordLengthChange","passwordLength","passwordCountChange","passwordCount","getPassword","password","passwordGroup","getCharConfig","i","push","generatePassword","key","onSuccess","component","data-clipboard-text","button-title","isCapChange","console","log","getCharConfigCount","isCap","isLowChange","isLow","isNumChange","isNum","isOthChange","isOth","char","len","randomInt","n","x","Uint32Array","window","crypto","getRandomValues","gapless","justifyContent","step","min","max","paddingLeft","checked","Item","nameLink","contentNode","isPage","link","name","content","textDecoration","Body","Home","Fm","data","_self","fetch","then","response","ok","json","channel","photo","concat","catch","error","JSON","stringify","map","Container","src","BackFm","FmLayout","Mp3","Channel","song","mp3","music","current","play","text","next","last","mute","muted","paused","pause","volumeChange","volume","createRef","server","match","params","Id","Math","trunc","ref","onEnded","autoPlay","App","exact","path","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.49d92312.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Footer, Container, Content } from \"rbx\";\r\nimport DateTime from './DateTime';\r\n\r\nexport default DateTime((props) => {\r\n  return (\r\n    <Footer style={{ paddingBottom: '3rem', background: '#F5F5F5' }}>\r\n      <Container>\r\n        <Content className=\"has-text-centered\">\r\n          <p style={{ marginBottom: '.4rem' }}>&copy; {new Date().getFullYear()} <a href=\"https://www.haibing.site\">海兵大侠</a> BY <a href=\"https://github.com/dolphin836\" target=\"_blank\" rel=\"noopener noreferrer\">dolphin</a></p>\r\n          <p className=\"is-size-7\" style={{ marginBottom: '.4rem' }}>\r\n            <a href=\"http://www.beian.miit.gov.cn\" className=\"has-text-grey\" target=\"_blank\" rel=\"noopener noreferrer\">苏 ICP 备 15001763 号 - 4</a>\r\n          </p>\r\n          <p className=\"is-size-7\">{props.nowDateTime}</p>\r\n        </Content>\r\n      </Container>\r\n    </Footer>\r\n  );\r\n})\r\n","import React from 'react';\r\n\r\nexport default function DateTime (Component) {\r\n    return class extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n        \r\n            this.state = {\r\n                nowDateTime: this.getDateTime(new Date())\r\n            };\r\n        }\r\n\r\n        componentDidMount() {\r\n            this.clock = setInterval(\r\n                () => this.tick(),\r\n                1000\r\n            );\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            clearInterval(this.clock);\r\n        }\r\n\r\n        tick() {\r\n            this.setState({\r\n                nowDateTime: this.getDateTime(new Date())\r\n            });\r\n        }\r\n\r\n        // 得到 Y-m-d H:i:s 格式的日期时间字符串\r\n        getDateTime(dateTime) {\r\n            let month = dateTime.getMonth() + 1;\r\n\r\n            return dateTime.getFullYear() + '-' + this.zFill(month) + '-' + this.zFill(dateTime.getDate()) + ' ' + this.zFill(dateTime.getHours()) + ':' + this.zFill(dateTime.getMinutes()) + ':' + this.zFill(dateTime.getSeconds());\r\n        }\r\n\r\n        // 补零\r\n        zFill(argc) {\r\n            let s = \"0\" + argc;\r\n\r\n            return s.substr(s.length - 2);\r\n        }\r\n\r\n        render () {\r\n            return <Component nowDateTime={ this.state.nowDateTime } {...this.props} />\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Content, Title } from \"rbx\";\r\n\r\nfunction Back() {\r\n    return (\r\n        <Content className=\"back\">\r\n            <Link to=\"/\">\r\n                <Title as=\"p\" size={ 6 } className=\"has-text-weight-light\">\r\n                    Back Home\r\n                </Title>\r\n            </Link>\r\n        </Content>\r\n    );\r\n}\r\n\r\nexport default Back;\r\n","import React, { PureComponent } from 'react';\r\nimport { Content, Title } from \"rbx\";\r\n\r\nclass Name extends PureComponent {\r\n    // 页面加载完成\r\n    componentDidMount() {\r\n        // 设置页面标题\r\n        document.title = this.props.title;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Content className=\"has-text-centered\" style={{ padding: '0 0 2rem 0' }}>\r\n                <Title size={ 2 } style={{ marginBottom: '2rem' }}>\r\n                    { this.props.title }\r\n                </Title>\r\n                <Title subtitle size={ 5 } className=\"has-text-grey has-text-weight-light\">\r\n                    { this.props.subtitle }\r\n                </Title>\r\n            </Content>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Name;\r\n","import React from 'react';\r\nimport { Container } from \"rbx\";\r\nimport Footer from './Footer';\r\nimport Back from './Back';\r\nimport Name from './Name';\r\n\r\nfunction Layout(props) {\r\n  return (\r\n    <div className=\"awesome\">\r\n      <div className=\"app\">\r\n        <Container>\r\n          <Back />\r\n          <Name title={ props.title } subtitle={ props.subtitle } />\r\n          { props.children }\r\n        </Container>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Layout;\r\n","import React, { PureComponent } from 'react';\r\nimport { Button, Column, Title } from \"rbx\";\r\nimport Layout from '../Component/Layout';\r\n\r\nclass TimestampTransform extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n       nowDateTime: this.getNowDateTme(),\r\n      nowTimeStamp: this.getNowTimestamp(),\r\n         isRunning: true,\r\n        switchName: '暂 停',\r\n          dateTime: '',\r\n         timeStamp: ''\r\n    };\r\n  }\r\n  // 页面加载完成，创建时钟\r\n  componentDidMount() {\r\n    this.clock = setInterval(\r\n      () => this.running(),\r\n      1000\r\n    );\r\n  }\r\n  // 注销页面，清除时钟\r\n  componentWillUnmount() {\r\n    clearInterval(this.clock);\r\n  }\r\n  // 切换时钟运行状态\r\n  switchTimeState = () => {\r\n    this.setState({\r\n       isRunning: ! this.state.isRunning,\r\n      switchName: this.state.isRunning ? '开 启' : '暂 停'\r\n    });\r\n  };\r\n  // 时间字符串与 Unix 时间戳互转\r\n  transform = () => {\r\n    if (this.state.dateTime.length > 0) {\r\n      let timeStamp = this.stringToInt(this.state.dateTime);\r\n\r\n      if (! isNaN(timeStamp)) {\r\n        this.setState({\r\n          timeStamp: timeStamp\r\n        });\r\n      }\r\n    }\r\n\r\n    if (this.state.timeStamp.length > 0) {\r\n      let dateTime = this.intToString(this.state.timeStamp);\r\n\r\n      if (! isNaN(dateTime)) {\r\n        this.setState({\r\n          dateTime: dateTime\r\n        });\r\n      }\r\n    }\r\n  };\r\n  // 清空\r\n  clean = () => {\r\n    this.setState({\r\n       dateTime: '',\r\n      timeStamp: ''\r\n    });\r\n  };\r\n  // 时间字符串改变\r\n  dateTimeChange = (e) => {\r\n    this.setState({\r\n      dateTime: e.target.value\r\n    });\r\n  };\r\n  // Unix 时间戳改变\r\n  timeStampChange = (e) => {\r\n    this.setState({\r\n      timeStamp: e.target.value\r\n    });\r\n  };\r\n  // 时钟\r\n  running() {\r\n    if (this.state.isRunning) {\r\n      this.setState({\r\n         nowDateTime: this.getNowDateTme(),\r\n        nowTimeStamp: this.getNowTimestamp()\r\n      });\r\n    }\r\n  }\r\n  // 得到当前日期时间字符串\r\n  getNowDateTme() {\r\n    let dateTime = new Date();\r\n\r\n    return this.getDateTime(dateTime);\r\n  }\r\n  // 得到当前时间戳\r\n  getNowTimestamp() {\r\n    return this.stringToInt(this.getNowDateTme());\r\n  }\r\n  // 得到 Y-m-d H:i:s 格式的日期时间字符串\r\n  getDateTime(dateTime) {\r\n    let month = dateTime.getMonth() + 1;\r\n\r\n    return dateTime.getFullYear() + '-' + this.zFill(month) + '-' + this.zFill(dateTime.getDate()) + ' ' + this.zFill(dateTime.getHours()) + ':' + this.zFill(dateTime.getMinutes()) + ':' + this.zFill(dateTime.getSeconds());\r\n  }\r\n  // 补零\r\n  zFill(argc) {\r\n    let s = \"0\" + argc;\r\n\r\n    return s.substr(s.length - 2);\r\n  }\r\n  // 字符串转整型\r\n  stringToInt(argc) {\r\n    let date = new Date(argc);\r\n\r\n    return date.getTime() / 1000;\r\n  }\r\n  // 整型转字符串\r\n  intToString(argc) {\r\n    let dateTime = new Date(argc * 1000);\r\n\r\n    return this.getDateTime(dateTime);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Layout title=\"时间字符串与 Unix 时间戳互转\" subtitle=\"时间字符串与 Unix 时间戳互转\">\r\n        <Column.Group style={{ paddingBottom: '3rem' }}>\r\n          <Column className=\"is-5 has-text-centered\">\r\n              <Title size={5} className=\"has-text-dark has-text-weight-light\">\r\n                  当前时间：{ this.state.nowDateTime }\r\n              </Title>\r\n          </Column>\r\n          <Column className=\"is-2\">\r\n            <Button color=\"primary\" fullwidth rounded onClick={ this.switchTimeState }>\r\n            { this.state.switchName }\r\n            </Button>\r\n          </Column>\r\n          <Column className=\"is-5 has-text-centered\">\r\n              <Title size={5} className=\"has-text-dark has-text-weight-light\">\r\n                  Unix 时间戳：{ this.state.nowTimeStamp }\r\n              </Title>\r\n          </Column>\r\n        </Column.Group>\r\n        <Column.Group className=\"is-centered\">\r\n          <Column className=\"is-5\">\r\n              <div className=\"control\">\r\n                <textarea value={ this.state.dateTime } onChange={ this.dateTimeChange } className=\"textarea is-focused has-fixed-size\" rows=\"20\" placeholder=\"时间字符串\" />\r\n              </div>\r\n          </Column>\r\n          <Column className=\"is-2\">\r\n            <Button color=\"success\" fullwidth rounded onClick={ this.transform }>\r\n              转 换\r\n            </Button>\r\n            <Button color=\"info\" fullwidth rounded style={{ marginTop: '2rem' }} onClick={ this.clean }>\r\n              清 空\r\n            </Button>\r\n          </Column>\r\n          <Column className=\"is-5\">\r\n              <div className=\"control\">\r\n                <textarea value={ this.state.timeStamp } onChange={ this.timeStampChange } className=\"textarea is-focused has-fixed-size\" rows=\"20\" placeholder=\"Unix 时间戳\" />\r\n              </div>\r\n          </Column>\r\n        </Column.Group>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default TimestampTransform;\r\n","import React, {PureComponent} from 'react';\r\nimport Layout from '../Component/Layout';\r\nimport Clipboard from 'react-clipboard.js';\r\nimport ReactNotification from 'react-notifications-component';\r\nimport 'react-notifications-component/dist/theme.css';\r\nimport { store } from 'react-notifications-component';\r\nimport { Button, Content, Column, Title, Tag, Label, Checkbox } from \"rbx\";\r\n\r\nclass GeneratorRandomPassword extends PureComponent {\r\n    // 字符池配置\r\n    charConfig = [\r\n        [\"Cap\", \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"],\r\n        [\"Low\", \"abcdefghijklmnopqrstuvwxyz\"],\r\n        [\"Num\", \"0123456789\"],\r\n        [\"Oth\", \"#%*^&-_+=|[]{}()?/`~'\"]\r\n    ];\r\n    // 默认密码长度\r\n    defaultPasswordLength = 16;\r\n    // 默认密码个数\r\n    defaultPasswordCount = 10;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            passwordLength: this.defaultPasswordLength,\r\n            passwordCount: this.defaultPasswordCount,\r\n            isCap: true,\r\n            isLow: true,\r\n            isNum: true,\r\n            isOth: true\r\n        };\r\n\r\n        let password   = [];\r\n        let charConfig = this.getCharConfig();\r\n\r\n        for (let i = 0; i < this.state.passwordCount; i++) {\r\n            password.push(this.generatePassword(charConfig, this.state.passwordLength));\r\n        }\r\n\r\n        let passwordGroup = [];\r\n\r\n        for (let i = 0; i < password.length; i++) {\r\n            passwordGroup.push(<div key={i}><Clipboard onSuccess={this.getPasswordSuccess} component=\"h5\" data-clipboard-text={password[i]} button-title=\"单击复制到剪切板\">{password[i]}</Clipboard></div>);\r\n        }\r\n\r\n        this.state.password      = password;\r\n        this.state.passwordGroup = passwordGroup;\r\n    }\r\n\r\n\r\n    // 密码长度改变\r\n    getPasswordSuccess = () => {\r\n        store.addNotification({\r\n            title: \"成功\",\r\n            message: \"已复制密码到剪切板\",\r\n            type: \"success\",\r\n            insert: \"bottom\",\r\n            container: \"top-right\",\r\n            animationIn: [\"animated\", \"fadeIn\"],\r\n            animationOut: [\"animated\", \"fadeOut\"],\r\n            dismiss: {\r\n                duration: 3000,\r\n                onScreen: true\r\n            }\r\n        });\r\n    };\r\n\r\n    // 密码长度改变\r\n    passwordLengthChange = (e) => {\r\n        this.setState({\r\n            passwordLength: e.target.value\r\n        });\r\n    };\r\n\r\n    // 密码个数改变\r\n    passwordCountChange = (e) => {\r\n        this.setState({\r\n            passwordCount: e.target.value\r\n        });\r\n    };\r\n\r\n    // 生成密码\r\n    getPassword = () => {\r\n        let password      = [];\r\n        let passwordGroup = [];\r\n        let charConfig    = this.getCharConfig();\r\n\r\n        for (let i = 0; i < this.state.passwordCount; i++) {\r\n            password.push(this.generatePassword(charConfig, this.state.passwordLength));\r\n        }\r\n\r\n        for (let i = 0; i < password.length; i++) {\r\n            passwordGroup.push(<div key={i}><Clipboard onSuccess={this.getPasswordSuccess} component=\"h5\" data-clipboard-text={password[i]} button-title=\"单击复制到剪切板\">{password[i]}</Clipboard></div>);\r\n        }\r\n\r\n        this.setState({\r\n                 password: password,\r\n            passwordGroup: passwordGroup\r\n        });\r\n    };\r\n\r\n    //\r\n    isCapChange = () => {\r\n        console.log(1);\r\n        if (this.getCharConfigCount() > 1 || !this.state.isCap) {\r\n            this.setState({\r\n                isCap: !this.state.isCap\r\n            });\r\n        }\r\n    };\r\n\r\n    //\r\n    isLowChange = () => {\r\n        if (this.getCharConfigCount() > 1 || !this.state.isLow) {\r\n            this.setState({\r\n                isLow: !this.state.isLow\r\n            });\r\n        }\r\n    };\r\n\r\n    //\r\n    isNumChange = () => {\r\n        if (this.getCharConfigCount() > 1 || !this.state.isNum) {\r\n            this.setState({\r\n                isNum: !this.state.isNum\r\n            });\r\n        }\r\n    };\r\n\r\n    //\r\n    isOthChange = () => {\r\n        if (this.getCharConfigCount() > 1 || !this.state.isOth) {\r\n            this.setState({\r\n                isOth: !this.state.isOth\r\n            });\r\n        }\r\n    };\r\n\r\n    // 得到配置的字符类型的数量，不得小于 1\r\n    getCharConfigCount() {\r\n        return this.state.isCap + this.state.isLow + this.state.isNum + this.state.isOth\r\n    }\r\n\r\n    // 生成字符池\r\n    getCharConfig() {\r\n        let charConfig = \"\";\r\n\r\n        for (let i = 0; i < this.charConfig.length; i++) {\r\n            if (this.charConfig[i][0] === 'Cap' && this.state.isCap) {\r\n                charConfig += this.charConfig[i][1];\r\n            }\r\n            if (this.charConfig[i][0] === 'Low' && this.state.isLow) {\r\n                charConfig += this.charConfig[i][1];\r\n            }\r\n            if (this.charConfig[i][0] === 'Num' && this.state.isNum) {\r\n                charConfig += this.charConfig[i][1];\r\n            }\r\n            if (this.charConfig[i][0] === 'Oth' && this.state.isOth) {\r\n                charConfig += this.charConfig[i][1];\r\n            }\r\n        }\r\n\r\n        return charConfig;\r\n    }\r\n\r\n    // 生成密码\r\n    generatePassword(char, len) {\r\n        let password = \"\";\r\n\r\n        for (let i = 0; i < len; i++) {\r\n            password += char[this.randomInt(char.length)];\r\n        }\r\n\r\n        return password;\r\n    }\r\n\r\n    // 生成随机数\r\n    randomInt(n) {\r\n        let x = new Uint32Array(1);\r\n\r\n        window.crypto.getRandomValues(x);\r\n\r\n        return x[0] % n;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Layout title=\"生成更安全的随机密码\" subtitle=\"Generator random and safe password\">\r\n                <ReactNotification />\r\n                <Column.Group>\r\n                    <Column className=\"is-5\">\r\n                        <Content>\r\n                            <Tag.Group gapless style={{justifyContent: 'center'}}>\r\n                                <Tag>密码长度</Tag>\r\n                                <Tag color=\"primary\">{this.state.passwordLength}</Tag>\r\n                            </Tag.Group>\r\n                            <input type=\"range\" onChange={this.passwordLengthChange}\r\n                                   className=\"slider\"\r\n                                   step=\"1\" min=\"6\" max=\"40\" value={this.state.passwordLength}/>\r\n                        </Content>\r\n                        <Content>\r\n                            <Tag.Group gapless style={{justifyContent: 'center'}}>\r\n                                <Tag>密码个数</Tag>\r\n                                <Tag color=\"primary\">{this.state.passwordCount}</Tag>\r\n                            </Tag.Group>\r\n                            <input type=\"range\" onChange={this.passwordCountChange}\r\n                                   className=\"slider\"\r\n                                   step=\"1\" min=\"1\" max=\"20\" value={this.state.passwordCount}/>\r\n                        </Content>\r\n                        <Title size={4}>字符集</Title>\r\n                        <Content>\r\n                            <Label style={{ paddingLeft: 0 }} onClick={this.isCapChange}>\r\n                                <Checkbox as=\"span\" checked={this.state.isCap}\r\n                                      className={this.state.isCap ? 'is-checked' : ''}> A B C D E F G H I J K L M\r\n                                N O P Q R S T U V W X Y Z</Checkbox>\r\n                            </Label>\r\n                        </Content>\r\n                        <Content>\r\n                            <Label style={{ paddingLeft: 0 }} onClick={this.isLowChange}>\r\n                                <Checkbox as=\"span\" checked={this.state.isLow}\r\n                                      className={this.state.isLow ? 'is-checked' : ''}> a b c d e f g h i j k l m\r\n                                n o p q r s t u v w x y z</Checkbox>\r\n                            </Label>\r\n                        </Content>\r\n                        <Content>\r\n                            <Label style={{ paddingLeft: 0 }} onClick={this.isNumChange}>\r\n                                <Checkbox as=\"span\" checked={this.state.isNum}\r\n                                      className={this.state.isNum ? 'is-checked' : ''}> 0 1 2 3 4 5 6 7 8\r\n                                9</Checkbox>\r\n                            </Label>\r\n                        </Content>\r\n                        <Content>\r\n                            <Label style={{ paddingLeft: 0 }} onClick={this.isOthChange}>\r\n                                <Checkbox as=\"span\" checked={this.state.isOth}\r\n                                      className={this.state.isOth ? 'is-checked' : ''}> # % * ^ & - _ + = | [\r\n                                ] {} ( ) ? / ` ~ '</Checkbox>\r\n                            </Label>\r\n                        </Content>\r\n                        <Button color=\"info\" size=\"medium\" fullwidth rounded onClick={this.getPassword}\r\n                                style={{marginTop: '4rem'}}>换一组</Button>\r\n                    </Column>\r\n                    <Column className=\"is-2\">\r\n                    </Column>\r\n                    <Column className=\"is-5\">\r\n                        <div className=\"password-group\">\r\n                            {this.state.passwordGroup}\r\n                        </div>\r\n                    </Column>\r\n                </Column.Group>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GeneratorRandomPassword;\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Message, Title } from \"rbx\";\r\n\r\nfunction Item({color, isPage, link, name, content}) {\r\n\r\n    let nameLink;\r\n\r\n    if (isPage) {\r\n        nameLink = <Link to={ link } style={{ textDecoration: 'none' }}>{ name }</Link>;\r\n    } else {\r\n        nameLink = <a href={ link } style={{ textDecoration: 'none' }} target=\"_blank\" rel=\"noopener noreferrer\">{ name }</a>;\r\n    }\r\n\r\n    let contentNode;\r\n\r\n    if (content) {\r\n        contentNode = <Title size={ 6 } subtitle className=\"has-text-grey has-text-weight-light\">{ content }</Title>\r\n    }\r\n\r\n    return (\r\n        <Message color={ color } size=\"large\">\r\n            <Message.Body className=\"is-radiusless\">\r\n                <Title as=\"p\" size={ 4 }>\r\n                    { nameLink }\r\n                </Title>\r\n                { contentNode }\r\n            </Message.Body>\r\n        </Message>\r\n    );\r\n}\r\n\r\nexport default Item;\r\n","import React from 'react';\r\nimport Footer from '../Component/Footer';\r\nimport Item from '../Component/Item';\r\nimport { Container, Section, Column, Title } from \"rbx\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"awesome\">\r\n      <div className=\"app\">\r\n        <Section>\r\n          <Container>\r\n            <Title as=\"h5\" size={ 3 }>工 具</Title>\r\n            <Column.Group>\r\n              <Column>\r\n                <Item name=\"时间字符串与 Unix 时间戳互转\" content=\"Transform Unix Time Stamp And Data Time\" link=\"TimestampTransform\" color=\"link\" isPage />\r\n              </Column>\r\n              <Column>\r\n                <Item name=\"生成更安全的随机密码\" content=\"Generator Random And Safe Password\" link=\"GeneratorRandomPassword\" color=\"link\" isPage />\r\n              </Column>\r\n            </Column.Group>\r\n            <Title as=\"h5\" size={ 3 }>应 用</Title>\r\n            <Column.Group>\r\n              <Column>\r\n                <Item name=\"高品质图片分享\" link=\"https://36photo.cn/photos\" color=\"success\" />\r\n              </Column>\r\n              <Column>\r\n                <Item name=\"精选网络应用导航\" link=\"https://36awesome.com\" color=\"success\" />\r\n              </Column>\r\n            </Column.Group>\r\n            <Column.Group>\r\n              <Column>\r\n                <Item name=\"安全的密码管理\" link=\"https://my.36password.com\" color=\"success\" />\r\n              </Column>\r\n              <Column>\r\n                <Item name=\"音乐电台\" link=\"Fm\" color=\"success\" isPage />\r\n              </Column>\r\n            </Column.Group>\r\n            <Title as=\"h5\" size={ 3 }>社 交</Title>\r\n            <Column.Group>\r\n              <Column>\r\n                <Item name=\"微博\" content=\"部分转发内容并不代表本人观点\" link=\"https://www.weibo.com/dolphin836\" color=\"warning\" />\r\n              </Column>\r\n              <Column>\r\n                <Item name=\"博客\" content=\"编程、PHP、Java、React\" link=\"https://github.com/dolphin836/Blog\" color=\"warning\" />\r\n              </Column>\r\n            </Column.Group>\r\n            <Column.Group>\r\n              <Column size=\"half\">\r\n                <Item name=\"邮箱\" content=\"dolphin@36photo.cn\" color=\"warning\" />\r\n              </Column>\r\n            </Column.Group>\r\n          </Container>\r\n        </Section>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { PureComponent } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport Layout from '../Component/Layout';\r\nimport { Column, Image, Title } from \"rbx\";\r\n\r\nconst Asset   = '../Asset/Fm/';\r\nconst Photo   = '../Asset/Fm/Photo/';\r\nconst Channel = 1;\r\n\r\nclass Fm extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        for (let i = 1; i <= Channel; i++) {\r\n            let server = Asset + i + '.json';\r\n\r\n            let _self = this;\r\n\r\n            fetch(server)\r\n                .then(function (response) {\r\n                    if (response.ok) {\r\n                        let json = response.json();\r\n                        \r\n                        json.then(function(data) {\r\n                            let channel = {\r\n                                   name: data.name,\r\n                                content: data.content,\r\n                                  photo: data.photo,\r\n                            };\r\n\r\n                            _self.setState({\r\n                                    data: _self.state.data.concat(channel)\r\n                            });\r\n                        });\r\n                    }\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(JSON.stringify(error));\r\n                });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Layout title=\"音乐电台\" subtitle=\"我年后虚度，空有一身疲惫\">\r\n                <Column.Group>\r\n                    { this.state.data.map((channel, i) =>\r\n                        <Column key={ i } size={ 3 }>\r\n                            <Image.Container>\r\n                                <Link to={ \"/FM/Channel/\" + (i + 1) }>\r\n                                    <Image src={ Photo + channel.photo } className=\"channel-photo\" />\r\n                                </Link>\r\n                            </Image.Container>\r\n                            <Title as=\"h5\" size={ 5 }>\r\n                                { channel.name }\r\n                            </Title>\r\n                            <Title as=\"p\" size={ 7 } subtitle className=\"has-text-grey has-text-weight-light\">\r\n                                { channel.content }\r\n                            </Title>\r\n                        </Column>\r\n                    )}\r\n                </Column.Group>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Fm;\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Content, Title } from \"rbx\";\r\n\r\nfunction BackFm() {\r\n    return (\r\n        <Content className=\"back\">\r\n            <Link to=\"/Fm\">\r\n                <Title as=\"p\" size={ 6 } className=\"has-text-weight-light\">\r\n                    Back Fm\r\n                </Title>\r\n            </Link>\r\n        </Content>\r\n    );\r\n}\r\n\r\nexport default BackFm;\r\n","import React from 'react';\r\nimport { Container } from \"rbx\";\r\nimport BackFm from './BackFm';\r\nimport Name from './Name';\r\n\r\nfunction FmLayout(props) {\r\n  return (\r\n    <div className=\"awesome\">\r\n      <div className=\"app\">\r\n        <Container>\r\n          <BackFm />\r\n          <Name title={ props.title } subtitle={ props.subtitle } />\r\n          { props.children }\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FmLayout;\r\n","import React, { PureComponent } from 'react';\r\nimport FmLayout from '../Component/FmLayout';\r\nimport { List, Button } from \"rbx\";\r\n\r\nconst Asset = '../../Asset/Fm/';\r\nconst Mp3   = '../../Asset/Fm/Mp3/';\r\n\r\nclass Channel extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n               name: '',\r\n            content: '',\r\n              photo: '',\r\n                mp3: '',\r\n                  i: 0,\r\n               data: [],\r\n               text: {\r\n                     mute: \"静音\",\r\n                     play: \"暂停\",\r\n                   volume: 100\r\n               }\r\n        };\r\n\r\n        this.music = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        // 时钟\r\n        this.clock = setInterval(\r\n            () => this.tick(),\r\n            1000\r\n        );\r\n\r\n        let server = Asset + this.props.match.params.Id + \".json\";\r\n\r\n        let _self = this;\r\n\r\n        fetch(server)\r\n            .then(function (response) {\r\n                if (response.ok) {\r\n                    let json = response.json();\r\n                    \r\n                    json.then(function(data) {  \r\n                        _self.setState({\r\n                               name: data.name,\r\n                            content: data.content,\r\n                              photo: data.photo,\r\n                               data: data.data,\r\n                                mp3: Mp3 + data.data[0].mp3\r\n                        });\r\n\r\n                        // 设置页面标题\r\n                        document.title = data.name;\r\n                    });\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log(JSON.stringify(error));\r\n            });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.clock);\r\n    }\r\n\r\n    tick() {\r\n        // console.log(this.music.current.readyState);\r\n        // console.log(this.music.current.duration);\r\n        // console.log(this.music.current.currentTime);\r\n        // console.log(this.music.current.ended);\r\n    }\r\n\r\n    // 播放\r\n    song = (i) => {\r\n        this.setState({\r\n            mp3: Mp3 + this.state.data[i].mp3,\r\n              i: i\r\n        }, () => {\r\n            this.music.current.play();\r\n            this.text();\r\n        });\r\n    }\r\n\r\n    // 下一首\r\n    next = () => {\r\n        let next = this.state.i + 1;\r\n\r\n        if (next >= this.state.data.length) {\r\n            next = 0;\r\n        }\r\n\r\n        this.song(next);\r\n        this.text();\r\n    }\r\n\r\n    // 上一首\r\n    last = () => {\r\n        let next = this.state.i - 1;\r\n\r\n        if (next <= 0) {\r\n            next = this.state.data.length - 1;\r\n        }\r\n\r\n        this.song(next);\r\n        this.text();\r\n    }\r\n\r\n    // 静音\r\n    mute = () => {\r\n        this.music.current.muted = ! this.music.current.muted;\r\n\r\n        this.text();\r\n    }\r\n\r\n    // 播放\r\n    play = () => {\r\n        if (this.music.current.paused) {\r\n            this.music.current.play();\r\n        } else {\r\n            this.music.current.pause();\r\n        }\r\n\r\n        this.text();\r\n    }\r\n\r\n    // 更新文案\r\n    text () {\r\n        this.setState({\r\n            text: {\r\n                  mute: this.music.current.muted ? '取消静音' : '静音',\r\n                  play: this.music.current.paused ? '播放' : '暂停',\r\n                volume: Math.trunc(this.music.current.volume * 100)\r\n            }\r\n        });\r\n    }\r\n\r\n    // 音量\r\n    volumeChange = (e) => {\r\n        this.music.current.volume = e.target.value;\r\n        this.text();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <FmLayout title={ this.state.name } subtitle={ this.state.content }>\r\n                <audio src={ this.state.mp3 } ref={ this.music } onEnded= { () => this.next() } autoPlay>\r\n                </audio>\r\n                <Button.Group>\r\n                    <Button onClick={() => this.mute() }>{ this.state.text.mute }</Button>\r\n                    <Button onClick={() => this.play() }>{ this.state.text.play }</Button>\r\n                    <Button onClick={() => this.next() }>下一首</Button>\r\n                    <Button onClick={() => this.last() }>上一首</Button>\r\n                </Button.Group>\r\n                <input type=\"range\" onChange={this.volumeChange} step=\"0.01\" min=\"0\" max=\"1\" /> { this.state.text.volume }\r\n                <List>\r\n                    { this.state.data.map((song, i) =>\r\n                        <List.Item key={ i } onClick={() => this.song(i) }>{ song.name }</List.Item>\r\n                    )}   \r\n                </List>\r\n            </FmLayout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Channel;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport TimestampTransform from './Page/TimestampTransform';\r\nimport GeneratorRandomPassword from './Page/GeneratorRandomPassword';\r\nimport Home from './Page/Home';\r\nimport Fm from './Page/Fm';\r\nimport Channel from './Page/Channel';\r\nimport \"rbx/index.css\";\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Route exact path=\"/\" component={Home} />\r\n      <Route exact path=\"/TimestampTransform\" component={TimestampTransform} />\r\n      <Route exact path=\"/GeneratorRandomPassword\" component={GeneratorRandomPassword} />\r\n      <Route exact path=\"/Fm\" component={Fm} />\r\n      <Route exact path=\"/Fm/Channel/:Id\" component={Channel} />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />, \r\n    document.getElementById('app')\r\n);\r\n"],"sourceRoot":""}